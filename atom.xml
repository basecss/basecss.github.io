<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>basecss.net</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.basecss.net/"/>
  <updated>2016-04-02T08:50:15.000Z</updated>
  <id>http://www.basecss.net/</id>
  
  <author>
    <name>basecss</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript 位运算学习</title>
    <link href="http://www.basecss.net/2014/03/27/code-learning/"/>
    <id>http://www.basecss.net/2014/03/27/code-learning/</id>
    <published>2014-03-27T01:23:31.000Z</published>
    <updated>2016-04-02T08:50:15.000Z</updated>
    
    <content type="html">&lt;p&gt;这几天粗略的阅读了一下 &lt;a href=&quot;http://angularjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AngularJS&lt;/a&gt; 的源码，在这个过程中发现有这么两段代码挺有意思的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; manualLowercase = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isString(s) ? s.replace(&lt;span class=&quot;regexp&quot;&gt;/[A-Z]/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ch&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.fromCharCode(ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) | &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;) : s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; manualUppercase = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isString(s) ? s.replace(&lt;span class=&quot;regexp&quot;&gt;/[a-z]/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ch&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.fromCharCode(ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp; ~&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;) : s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;这两段代码用来处理字母大小写转换，由于某些国家（土耳其）使用 &lt;code&gt;toLowerCase()&lt;/code&gt; 和 &lt;code&gt;toUpperCase()&lt;/code&gt; 不能正确的转换字母大小写，因而需要手动的处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;为什么说这两段代码有意思？其实是觉得其中用&lt;strong&gt;位运算&lt;/strong&gt;处理字母大小写的代码很巧妙，其核心代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) | &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 大写转小写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp; ~&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;// 小写转大写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在分析两段代码之前，先来回顾一下 JavaScript 中的两个概念：&lt;strong&gt;整数&lt;/strong&gt;和&lt;strong&gt;位运算&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;从严格意义上讲，ECMAScript 中有两种类型的整数：有符号的整数（正数和负数）和无符号的整数（只有正数）。而默认情况下 JavaScript 中的整数都是有符号的。&lt;/p&gt;
&lt;p&gt;而在不考虑 ECMAScript 中数字格式存储与转换（为 32 位）的情况下，实际上我们操作的都是 32 位的整数。而对于上面提到的有符号整数而言，其中前 31 位（&lt;code&gt;end&amp;lt;-start&lt;/code&gt;）表示数字的值，最后1位表示符号位（&lt;code&gt;0&lt;/code&gt; 表示正，&lt;code&gt;1&lt;/code&gt; 表示负）。&lt;/p&gt;
&lt;p&gt;这里提到的 32 位的整数在计算机底层都是使用二进制格式存储的，而这个二进制由 &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;1&lt;/code&gt; 组成，其中每一位都有对应的十进制数字结果，整个二进制数值代表的十进制结果由所有这些位对应的十进制数字之和。&lt;/p&gt;
&lt;p&gt;这篇文章中不考虑负数的情况，一个 32 位二进制格式的数字看起来如下所示，这里以 10 为例：&lt;/p&gt;
&lt;figure class=&quot;highlight basic&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;0 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;二进制数字计算的方式：&lt;code&gt;number ( Math.pow(2, index))&lt;/code&gt;，这里的 &lt;code&gt;number&lt;/code&gt; 表示二进制中对应位上的数值 0/1，&lt;code&gt;index&lt;/code&gt; 表示该数值在整个二进制格式的数字中的索引。注意一个二进制格式的起始点在右侧。&lt;/p&gt;
&lt;p&gt;那么上面的数字就等于：&lt;code&gt;1 * Math.pow(2,3) + 1 * Math.pow(2, 1) = 10&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;前面提到了，这些二进制的数字实际上都是在计算机的底层完成的，而 ECMAScript 中刚好提供了二进制运算相关的操作符，这些操作符都是直接对运算数进行二进制操作的，并且都是发生在幕后的。&lt;/p&gt;
&lt;p&gt;JavaScript 中有 7 个位运算相关的运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;按位非(NOT)&lt;/strong&gt; - 用一个波浪线” &lt;code&gt;~&lt;/code&gt; “表示，对二进制的每一位进行取反操作，即将 &lt;code&gt;0&lt;/code&gt; 变成 &lt;code&gt;1&lt;/code&gt;，将 &lt;code&gt;1&lt;/code&gt; 变成 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按位与(AND)&lt;/strong&gt; - 用一个和好” &lt;code&gt;&amp;amp;&lt;/code&gt; “表示，必须有两个操作数，先对齐二进制位，然后把对应位都为 &lt;code&gt;1&lt;/code&gt; 的为筛下来，其他的都为 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按位或(OR)&lt;/strong&gt; - 用一个竖线” &lt;code&gt;|&lt;/code&gt; “表示，也必须有两个操作数，对齐位之后只要对应位有 1 就筛下来，只有同时位 0 时才返回 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按位异或(XOR)&lt;/strong&gt; - 用一个插入符号” &lt;code&gt;^&lt;/code&gt; “表示，也必须有两个操作数，对齐位之后不同的返回 1，相同的返回 0。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;左移&lt;/strong&gt; - 用两个小于号” &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;表示，顾名思议，将操作数左移指定位数，右侧空位用 0 补齐。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有符号右移&lt;/strong&gt; - 用两个大于号” &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; “表示，保留符号位，剩下的右移指定位。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无符号右移&lt;/strong&gt; - 用三个大于号” &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; “表示，往右侧移动指定位数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上这些位运算符，最终操作的都是二进制数值。&lt;/p&gt;
&lt;p&gt;在上面的代码中分别涉及到了&lt;strong&gt;按位非&lt;/strong&gt;，&lt;strong&gt;按位与&lt;/strong&gt;，&lt;strong&gt;按位或&lt;/strong&gt;三种运算。先来针对上面的两段代码讲解一下这三个位运算符：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) | &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码通过正则表达式匹配到给定字符串中的每个大写字母: &lt;code&gt;A-Z&lt;/code&gt;；接下来使用字符串对象的 &lt;code&gt;charCodeAt()&lt;/code&gt; 方法拿到该字符对应的 Unicode 编码，恰好这个编码是一个数字；最后使用&lt;strong&gt;按位或&lt;/strong&gt;运算获取到另外一个数字。&lt;/p&gt;
&lt;p&gt;为什么这里执行对数值 32 的&lt;strong&gt;按位或&lt;/strong&gt;运算呢？当然这肯定不是空穴来风。那么我们先从大写字母及对应的 Unicode 值分析看看。不难发现，&lt;code&gt;A-Z&lt;/code&gt; 对应的 Unicode 编码分别为 &lt;code&gt;65-90&lt;/code&gt;；而这写编码对应的二进制表示分别为：&lt;code&gt;1000001&lt;/code&gt; … &lt;code&gt;1011010&lt;/code&gt;。再看看小些字母对应的数据：其 Unicode 编码分别为：&lt;code&gt;97-122&lt;/code&gt;，对应的二进制表示分别为：&lt;code&gt;1100001&lt;/code&gt;…&lt;code&gt;1111010&lt;/code&gt;。最后将它们放入一张表格中对比如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：使用 &lt;code&gt;(1).toString(2)&lt;/code&gt; 便可以拿到每个数字对应的二进表示法的有效位。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;大写字母二进制有效位&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;code&gt;1000001&lt;/code&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;…&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;code&gt;1011010&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;小写字母二进制有效位&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;1100001&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;1111010&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在这个表格中没有完整列出每个字母对应的二进制有效位。但是通过完整的对比不难发现，大写字母与小写字母的二进制有效位都是 7 位，对这些数值进行对不不难发现大小写字母的二进制有效位中：大写字母的第 6 位为 0；而小写字母的第 6 位为 1；而每个大小写自己的二进制有效位中刚好只有这一位不同。&lt;/p&gt;
&lt;p&gt;因此我们在求值大写字母的对应的小写字母的二进制数值时转换大写字母的二进制数值第 6 位即可，其他的位是一样的不用转换。而第 6 位为 1 时，其对应的十进制数值刚好是 32（&lt;code&gt;1 * Math.pow(2, 5)&lt;/code&gt;），32 对应的二进制数值的有效位为：&lt;code&gt;100000&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;那么如何转换这里的第 6 位呢？我们的目的是将大写字母二进制数值第 6 位的 0 转换为 1，而其他的位不变。最终我们只需要拿一个刚好第 6 位为 1，其他位为 0 的二进制数值与大写字母的二进制数值进行位运算操作即可，这个能够用来进行有效位运算的二进制数值则为 &lt;code&gt;100000&lt;/code&gt;，而 JavaScript 中的&lt;strong&gt;按位或&lt;/strong&gt;操作刚好能有做到这一点。&lt;/p&gt;
&lt;p&gt;而在 JavaScript 中，我们并不能直接操作一个二进制的数值，二进制的运算都是在低层完成的，在 JavaScript 中这些都是按位运算符的使命。那么，在前面使用 &lt;code&gt;charCodeAt()&lt;/code&gt; 方法已经拿到了大写字母对应的 Unicode 编码-即一个有效的十进制数字；而 &lt;code&gt;100000&lt;/code&gt; 对应的十进制数字为 32。&lt;/p&gt;
&lt;p&gt;由此得出结论，使用大写字母对应的 Unicode 编码与 32 作按位或运算便能正确的拿到其对应的小写字母的 Unicode 编码，其操作过程如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以大写字母 &lt;code&gt;A&lt;/code&gt; 为例&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如此，便拿到了一个二进制数值：&lt;code&gt;1100001&lt;/code&gt;，对应的十进制数字为 97（parseInt(‘1100001’, 2)）。最后使用 String 对象的 &lt;code&gt;fromCharCode()&lt;/code&gt; 方法得到的字符便是大写字母 &lt;code&gt;A&lt;/code&gt; 对应的小写字母 &lt;code&gt;a&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;整个转换的过程中，所有的这些操作实际上都是在底层(?内存中)完成的。&lt;/p&gt;
&lt;p&gt;上面剖析了大写字母转小写字母的过程。接下来再看看小写字母转大写字母。在上面的代码中，我们可以看到转大写字母的代码为：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp; ~&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先，同大写字母一样，使用字符串对象 (String) 的 &lt;code&gt;charCodeAt()&lt;/code&gt; 方法拿到对应的 Unicode 编码(也是一个十进制数值)。在上面的字母二进制数值对比表格中我们已经找到了规律：即转换每个字母对应的二进制数值的第 6 位即可。那么如何将小写字母的二进制数值的第 6 位 1 转换为 0，而其位不变呢？&lt;/p&gt;
&lt;p&gt;前面将大写字母的第 6 位 0 转为 1，我们使用了&lt;strong&gt;按位或&lt;/strong&gt;来保证将第 6 位正确的转换为 1。而这一次小写转大写的过程中，我们必须保证正确的将第 6 位 1 转换为 0，其他位不变即可。由此得出，这一次进行位运算的基本条件必须保证第二个操作数的第 6 位为 0，而其他位该是 1 的是 1，该是 0 的是 0。&lt;/p&gt;
&lt;p&gt;那么如何做到这一点呢？根据位运算的特点以及上面的分析，我们保证第 6 位不同即可，那么拿 &lt;code&gt;011111&lt;/code&gt; 与小写字母的二进制数值进行&lt;strong&gt;按位与&lt;/strong&gt;运算运算即可。而对 32 进行&lt;strong&gt;按位非&lt;/strong&gt;运算的结果刚好为 &lt;code&gt;011111&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以小写字母 &lt;code&gt;a&lt;/code&gt; 为例&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;这里不一定必须是 &lt;code&gt;011111&lt;/code&gt;。比如拿一个完整的 32 位 &lt;code&gt;11111111111111111111111111011111&lt;/code&gt; 也可以。但是在上述环境中，&lt;code&gt;011111&lt;/code&gt; 就能满足需求，而这个二进制数值对应的数值刚好是对 32 进行&lt;strong&gt;按位非&lt;/strong&gt;的运算结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据前面的分析，这样就拿到了大写字母 A 对应的二进制数值，再对它编码便可以返回最终的大写字母。&lt;/p&gt;
&lt;p&gt;至此，对 AngularJS 中这两段代码的分析就完成了。也算是对 JavaScript 中的位运算做了一次巩固，温习。&lt;/p&gt;
&lt;p&gt;其实 JavaScript 中的位运算远远不止这一点，我们还可以使用其他位运算符做到很多事情。下面是一些例子，不妨分析一下其运算原理：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取 0-max 之间随机整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;random&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;max&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * max | &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取 1-max 之间的随机整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// return Math.random() * max | 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 奇偶判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isOdd&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;number&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(number) &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isEven&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;number&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(number) &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 取整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;int&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;number&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; number | &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 取半&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;number &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 2x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;number &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 随机颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;#&#39;&lt;/span&gt;+ (&lt;span class=&quot;string&quot;&gt;&#39;000000&#39;&lt;/span&gt; + (&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()*&lt;span class=&quot;number&quot;&gt;0xFFFFFF&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).toString(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)).slice(&lt;span class=&quot;number&quot;&gt;-6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 还可以挖掘更多的技巧....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些本文中用到的代码片段：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取字符 Unicode 编码值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取字符二进制数值有效位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).toString(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 解析二进制数值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(binaryNumber, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 解析 Unicode 数值位对应的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.fromCharCode(unicodeNumber);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;写在最后，虽然代码很小，但是其中学问还是蛮大的，仔细分析一下感觉收获很多。在这里尤其感谢我的导师 &lt;a href=&quot;http://www.toobug.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@toobug&lt;/a&gt; 不厌其烦的在 KFC 给我讲解了很多基础知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/js/pro_js_operators_bitwise.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ECMAScript 位运算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ituring.com.cn/book/946&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript 高级程序设计(第三版) 3.5.2 位操作符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN - 位运算符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这几天粗略的阅读了一下 &lt;a href=&quot;http://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; 的源码，在这个过程中发现有这么两段代码挺有意思的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; manualLowercase = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isString(s) ? s.replace(&lt;span class=&quot;regexp&quot;&gt;/[A-Z]/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ch&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.fromCharCode(ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) | &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;) : s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; manualUppercase = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isString(s) ? s.replace(&lt;span class=&quot;regexp&quot;&gt;/[a-z]/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ch&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.fromCharCode(ch.charCodeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp; ~&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;) : s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;这两段代码用来处理字母大小写转换，由于某些国家（土耳其）使用 &lt;code&gt;toLowerCase()&lt;/code&gt; 和 &lt;code&gt;toUpperCase()&lt;/code&gt; 不能正确的转换字母大小写，因而需要手动的处理。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>classList 笔记</title>
    <link href="http://www.basecss.net/2013/12/27/classlist/"/>
    <id>http://www.basecss.net/2013/12/27/classlist/</id>
    <published>2013-12-26T17:08:22.000Z</published>
    <updated>2016-04-02T09:05:47.000Z</updated>
    
    <content type="html">&lt;p&gt;HTML5 中新增了一个 &lt;code&gt;classList&lt;/code&gt; API，顾命思议使用它能够获取一个 html 元素的 class 列表，并且能够使用 JavaScript 来管理这个 class 列表。比如：增删改。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;classList&lt;/code&gt; 非常方便，在此之前操作元素的 class 可谓相当头疼。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;获取-classList&quot;&gt;&lt;a href=&quot;#获取-classList&quot; class=&quot;headerlink&quot; title=&quot;获取 classList&quot;&gt;&lt;/a&gt;获取 &lt;code&gt;classList&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;获取一个元素的 &lt;code&gt;classList&lt;/code&gt; 非常容易，通过元素的 &lt;code&gt;classList&lt;/code&gt; 属性就能简单的获取到元素的 class 列表。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dom&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;classA classB classC&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取元素的 &lt;code&gt;classList&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dom = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;dom&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; domClassList = dom.classList&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(domClassList)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在浏览器中，元素的 &lt;code&gt;classList&lt;/code&gt; 属性会返回一个 &lt;code&gt;DOMTokenList&lt;/code&gt; 对象，这个对象包含了该元素的 class 列表，以及代表列表长度的 &lt;code&gt;length&lt;/code&gt; 属性。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;classA&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;classB&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;classC&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    length: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;W3C 规范中并没有 &lt;code&gt;classList&lt;/code&gt; 对应的规范，仅仅是在 &lt;a href=&quot;http://www.w3.org/TR/dom/#dom-element-classlist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DOM4规范中提及&lt;/a&gt;, DOM4 规范中规定 &lt;code&gt;classList&lt;/code&gt; 属性返回一个关联的 &lt;code&gt;DOMTokenList&lt;/code&gt; 对象，这个对象就代表着相关对象的 classes [class列表]。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/dom/#domtokenlist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DOMTokenList&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要查看 &lt;code&gt;classList&lt;/code&gt; 所属类型，应该使用 &lt;code&gt;element.classList instanceof DOMTokenList&lt;/code&gt; 的方式，而 &lt;code&gt;typeof element.classList&lt;/code&gt; 会返回 ‘object’。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;操作class列表&quot;&gt;&lt;a href=&quot;#操作class列表&quot; class=&quot;headerlink&quot; title=&quot;操作class列表&quot;&gt;&lt;/a&gt;操作class列表&lt;/h3&gt;&lt;p&gt;DOMTokenList 规范提供了一系列可以用于 &lt;code&gt;classList&lt;/code&gt; 属性的属性和方法，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add()&lt;/code&gt; 用于给 class 列表中添加一个或多个 class [CSS 类]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remove()&lt;/code&gt; 从现有的列表中删除一个或者多个 class&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contains()&lt;/code&gt; 检查给定的 class 是否在列表中，返回布尔值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toggle()&lt;/code&gt; 切换列表中的某个 class&lt;/li&gt;
&lt;li&gt;&lt;code&gt;item()&lt;/code&gt; 获取列表中指定索引的 class。&lt;em&gt;与获取数组元素的方式相同&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt; 将列表转换为一个字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; 获取列表中 class 个数总数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt; 给 classList 对象添加一个自定的属性或者方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;classList-add&quot;&gt;&lt;a href=&quot;#classList-add&quot; class=&quot;headerlink&quot; title=&quot;classList.add()&quot;&gt;&lt;/a&gt;classList.add()&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;classList.add()&lt;/code&gt; 给指定元素添加 class 非常简单，只需要将需要添加的 class 以字符串的形式传递给 &lt;code&gt;add()&lt;/code&gt; 方法即可。多个 class 之间使用逗号 &lt;code&gt;,&lt;/code&gt; 分割。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dom.classList.add(&lt;span class=&quot;string&quot;&gt;&#39;classD&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dom.classList.add(&lt;span class=&quot;string&quot;&gt;&#39;classE&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;classF&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;dom.classList.add(&amp;#39;a,b,c,d,e&amp;#39;)&lt;/code&gt; 的方式实际上也是合法的，但是这个逗号分割的字符串会作为一个 class 添加给 &lt;code&gt;dom.classList&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;classList-remove&quot;&gt;&lt;a href=&quot;#classList-remove&quot; class=&quot;headerlink&quot; title=&quot;classList.remove()&quot;&gt;&lt;/a&gt;classList.remove()&lt;/h5&gt;&lt;p&gt;与添加 class 一样简单，只需指定需要移除的 class 即可，多个 class 之间使用逗号分割。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dom.classList.remove(&lt;span class=&quot;string&quot;&gt;&#39;classA&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;classB&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;关于添加和移除多个 class&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DOM4 规范中规定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dom.spec.whatwg.org/#dom-domtokenlist-add&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dom-domtokenlist-add/remove&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;如果参数为空，抛出语法错误异常&lt;/li&gt;
&lt;li&gt;如果参数字符串包含任意的ASCII空格，抛出InvalidCharacterError异常&lt;/li&gt;
&lt;li&gt;如果给定的参数 class 在现有的列表中不存在就添加&lt;/li&gt;
&lt;li&gt;合法的操作都会触发 DOMTokenList 更新操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于移除操作，如果参数在列表中存在就移除，否则什么都不干。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于浏览器不支持使用空格分割的形式同时添加或移除多个 class，但是使用现有的方法很容易扩展。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!DOMTokenList.prototype.addmore) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOMTokenList.prototype.addmore = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;classes&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; classes = classes.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            classesLen = classes.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i, i &amp;lt; classesLen; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (classes[i].trim()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.add(classes[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// remove&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// this.remove(classes[i])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用现有的方式也很容易扩展更多的操作 classList 的方法，比如：以数组的形式添加/删除多个 class，处理使用逗号分割的连续字符串 (&lt;code&gt;a,b,c&lt;/code&gt;) 等等。&lt;/p&gt;
&lt;h5 id=&quot;classList-contains&quot;&gt;&lt;a href=&quot;#classList-contains&quot; class=&quot;headerlink&quot; title=&quot;classList.contains()&quot;&gt;&lt;/a&gt;classList.contains()&lt;/h5&gt;&lt;p&gt;这个方法会根据检查结果返回 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt;。如果列表中存在给定的参数，则返回 &lt;code&gt;true&lt;/code&gt;，反之，返回 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dom.classList.contains(&lt;span class=&quot;string&quot;&gt;&#39;classD&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dom.classList.contains(&lt;span class=&quot;string&quot;&gt;&#39;classD&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;classE&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;多个之间也可以使用逗号分割的字符串列表。对于依赖于指定的 class 是否存在于列表的后续操作，&lt;code&gt;contains()&lt;/code&gt; 是非常有用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;classList-toggle&quot;&gt;&lt;a href=&quot;#classList-toggle&quot; class=&quot;headerlink&quot; title=&quot;classList.toggle()&quot;&gt;&lt;/a&gt;classList.toggle()&lt;/h5&gt;&lt;p&gt;&lt;code&gt;classList.toggle()&lt;/code&gt; 也很简单。通常情况下我们会通过程序的方式或者用户触发某个函数来添加或移除列表中 class。使用 &lt;code&gt;toggle()&lt;/code&gt; 方法可以很容易做到。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dom.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dom.classList.toggle(&lt;span class=&quot;string&quot;&gt;&#39;classE&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;toggle()&lt;/code&gt; 方法会返回 Boolean 值，当将指定类移除时返回 &lt;code&gt;false&lt;/code&gt;, 反之返回 &lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;classList&lt;/code&gt; 的 &lt;code&gt;toggle()&lt;/code&gt; 方法还有可选的第二个参数。如果第二个参数设置为 &lt;code&gt;true&lt;/code&gt;，那么就会将参数 class 添加到元素中，而不是移除，反之设置 &lt;code&gt;false&lt;/code&gt; 删除指定的 class 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 第二参数的支持取决于浏览器，实际上加不加是一样的。不支持第二参数的浏览器会忽略它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;classList-item&quot;&gt;&lt;a href=&quot;#classList-item&quot; class=&quot;headerlink&quot; title=&quot;classList.item()&quot;&gt;&lt;/a&gt;classList.item()&lt;/h5&gt;&lt;p&gt;NodeList中也有 &lt;code&gt;item()&lt;/code&gt; 方法。 &lt;code&gt;classList&lt;/code&gt; 的 &lt;code&gt;item()&lt;/code&gt; 方法返回列表指定索引的 class （索引从 &lt;code&gt;0&lt;/code&gt; 开始）。假设有如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;domP&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;a b c d e f&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取指定索引的 class：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;domP&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.classList.item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// &#39;a&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.classList.item(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// &#39;e&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;classList&lt;/code&gt; 的 &lt;code&gt;item()&lt;/code&gt; 方法不能用来做添加或删除操作，会报错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;classList-toString&quot;&gt;&lt;a href=&quot;#classList-toString&quot; class=&quot;headerlink&quot; title=&quot;classList.toString()&quot;&gt;&lt;/a&gt;classList.toString()&lt;/h5&gt;&lt;p&gt;这个方法将指定元素的 class 列表转换为一个字符串。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;toString()&lt;/code&gt; 并不是 DOMTokenList 规范中特有的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;classList-length&quot;&gt;&lt;a href=&quot;#classList-length&quot; class=&quot;headerlink&quot; title=&quot;classList.length&quot;&gt;&lt;/a&gt;classList.length&lt;/h5&gt;&lt;p&gt;返回指定元素 class 列表长度。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;p.classList.length &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;classList-value&quot;&gt;&lt;a href=&quot;#classList-value&quot; class=&quot;headerlink&quot; title=&quot;classList.value&quot;&gt;&lt;/a&gt;classList.value&lt;/h5&gt;&lt;p&gt;由于 classList 就是一个对象，因此我们可以给他添加属性和方法，就像操作一般的对象一样。如：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;classList.someProperty = &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;classList.someMethod = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;低版本兼容-classList-polyfill&quot;&gt;&lt;a href=&quot;#低版本兼容-classList-polyfill&quot; class=&quot;headerlink&quot; title=&quot;低版本兼容(classList polyfill)&quot;&gt;&lt;/a&gt;低版本兼容(classList polyfill)&lt;/h3&gt;&lt;p&gt;提到 DOM 操作，兼容性就是个头疼的问题。尤其是 classList 这类非常好用的 API。 IE 到 10.0 才支持它，因此我们可以使用一些扩展的脚本程序来兼容不支持 classList 的浏览器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://caniuse.com/#search=classlist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;classList兼容性查看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#classlist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Modernizr推荐的一些polyfill脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/devongovett/1381839&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eligrey/classList.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;classList.js - 兼容IE8+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/termi/3952026&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gits2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以使用如下方式来检测浏览器是否支持 &lt;code&gt;classList&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;classList&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 使用 classList&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5 中新增了一个 &lt;code&gt;classList&lt;/code&gt; API，顾命思议使用它能够获取一个 html 元素的 class 列表，并且能够使用 JavaScript 来管理这个 class 列表。比如：增删改。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;classList&lt;/code&gt; 非常方便，在此之前操作元素的 class 可谓相当头疼。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS半透明总结</title>
    <link href="http://www.basecss.net/2013/07/09/opacity/"/>
    <id>http://www.basecss.net/2013/07/09/opacity/</id>
    <published>2013-07-08T23:30:06.000Z</published>
    <updated>2016-04-02T09:12:30.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;opacity-属性&quot;&gt;&lt;a href=&quot;#opacity-属性&quot; class=&quot;headerlink&quot; title=&quot;opacity 属性&quot;&gt;&lt;/a&gt;opacity 属性&lt;/h2&gt;&lt;p&gt;CSS 中的 &lt;code&gt;opacity&lt;/code&gt; 属性用于给元素指定一个 0 (全透明) 至1 (不透明) 的透明度值，但是这个值会应用到覆盖在背景之上的元素。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h5 id=&quot;兼容性如下&quot;&gt;&lt;a href=&quot;#兼容性如下&quot; class=&quot;headerlink&quot; title=&quot;兼容性如下:&quot;&gt;&lt;/a&gt;兼容性如下:&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Chrome&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;FireFox&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Internet Explorer&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Opera&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Safari&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;9.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;9.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;IE中的半透明&quot;&gt;&lt;a href=&quot;#IE中的半透明&quot; class=&quot;headerlink&quot; title=&quot;IE中的半透明&quot;&gt;&lt;/a&gt;IE中的半透明&lt;/h2&gt;&lt;p&gt;在 IE8 及早期版本的 IE 中，需要使用 IE 系私有的 filter 属性处理，其中分别有三种方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter: alpha(opacity=value);&lt;/code&gt; &lt;sup&gt;[1]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter: &amp;quot;alpha(opacity=value)&amp;quot;;&lt;/code&gt; &lt;sup&gt;[2]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ms-filter:&amp;quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=50)&amp;quot;;&lt;/code&gt; &lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[1] 直到 IE9 才支持 &lt;code&gt;opacity&lt;/code&gt; 属性，但是在之前的版本中都使用支持 &lt;code&gt;filter&lt;/code&gt; 替代，并且在IE中使用 &lt;code&gt;filter&lt;/code&gt; 属性实现透明的元素需要触发 hasLayout 使其具备 layout 特性。&lt;/p&gt;
&lt;p&gt;[2] &lt;strong&gt;&lt;strong style=&quot;color:red;&quot;&gt;据说&lt;/strong&gt;&lt;/strong&gt;在 IE8 标准模式中，&lt;code&gt;filter&lt;/code&gt; 属性的值需要使用引号包裹起来。&lt;/p&gt;
&lt;p&gt;[3] IE4-IE9 中支持的一种扩展形式的编写方式。&lt;/p&gt;
&lt;p&gt;[4] IE 中介绍了 &lt;code&gt;-ms-filter&lt;/code&gt;，实质上只是 &lt;code&gt;filter&lt;/code&gt; 属性的一个代名词。在 IE10 中不再存在。&lt;/p&gt;
&lt;h2 id=&quot;前缀&quot;&gt;&lt;a href=&quot;#前缀&quot; class=&quot;headerlink&quot; title=&quot;前缀&quot;&gt;&lt;/a&gt;前缀&lt;/h2&gt;&lt;p&gt;FireFox 0.9 之前使用 &lt;code&gt;-moz-opacity&lt;/code&gt; 实现，之后便重命名为 &lt;code&gt;opacity&lt;/code&gt;。 但之后 &lt;code&gt;-moz-opacity&lt;/code&gt; 一直都作为 &lt;code&gt;opacity&lt;/code&gt; 的别名存在。但是 FireFox 3.5 之后不再支持 &lt;code&gt;-moz-opacity&lt;/code&gt; 属性，此时也移除了在 JavaScript 中支持的 &lt;code&gt;MozOpacity&lt;/code&gt; 属性。&lt;strong&gt;据说&lt;/strong&gt;在 FireFox 早期版本中 &lt;code&gt;opacity&lt;/code&gt; 属性的实现取决于其 Gecko 的版本。&lt;/p&gt;
&lt;p&gt;在早期发布的 Safari 1.2 中支持 &lt;code&gt;-khtml-opacity&lt;/code&gt; 的方式实现半透明。&lt;/p&gt;
&lt;p&gt;Konqueror 从不支持 &lt;code&gt;-khtml-opacity&lt;/code&gt; 的形式，而是从 4.0 开始便支持 &lt;code&gt;opacity&lt;/code&gt;。&lt;/p&gt;
&lt;h5 id=&quot;应用&quot;&gt;&lt;a href=&quot;#应用&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h5&gt;&lt;p&gt;在实际应用中，由于 &lt;code&gt;opacity&lt;/code&gt;/&lt;code&gt;filter&lt;/code&gt; 的透明度会应用于子元素，因而常见的的做法是使用两个毗邻的元素，一个用于处理背景层，一个用于处理前景的内容层。其中背景层的要层叠在内容层底部，使用定位的方式便可以实现。示例：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.bg&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-ms-filter&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=50)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;alpha&lt;/span&gt;(opacity=50);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-moz-opacity&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-khtml-opacity&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;opacity&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/* 处理层叠 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;内容&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;RGBA&quot;&gt;&lt;a href=&quot;#RGBA&quot; class=&quot;headerlink&quot; title=&quot;RGBA&quot;&gt;&lt;/a&gt;RGBA&lt;/h2&gt;&lt;p&gt;CSS 2.1 中开始支持 RGB 色彩值，CSS3 中为 RGB 色彩添加了 Alpha 通道。可以用于处理 alpha 渲染和 alpha 合成[据说 alpha 与 RGBA 是有故事的]。RGBA 允许将元素设置为透明，但不影响子元素。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.selector&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0，200，200，.5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;RGBA兼容性&quot;&gt;&lt;a href=&quot;#RGBA兼容性&quot; class=&quot;headerlink&quot; title=&quot;RGBA兼容性&quot;&gt;&lt;/a&gt;RGBA兼容性&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Chrome&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;FireFox&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Internet Explorer&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Opera&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Safari&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;iOS(Safari)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;All&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;9.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10.x+&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3.x+&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;All&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&quot;IE中的RGBA&quot;&gt;&lt;a href=&quot;#IE中的RGBA&quot; class=&quot;headerlink&quot; title=&quot;IE中的RGBA&quot;&gt;&lt;/a&gt;IE中的RGBA&lt;/h5&gt;&lt;p&gt;IE9 之前的 IE 版本不支持 RGBA，可以使用一个私有的 CSS 滤镜实现 RGBA 的效果。[IE 中的  : ARGB 啦] 示例代码:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.selector&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: progid:DXImageTransform.Microsoft.&lt;span class=&quot;built_in&quot;&gt;gradient&lt;/span&gt;(startColorstr=#FFFFFFFF,endColorstr=#FFFFFFFF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DXImageTransform.Microsoft.gradient 滤镜中的 startColorstr 参数值是 #AARRGGBB 形式的，其中 AA 便是代表不透明度 (Alpha 通道值) 的十六进制表示，其中 00 表示全透明，FF 表示完全不透明，转化为十进制便是 0~255 范围之间的值，剩下的六位便是 RRGGBB 颜色的十六进制代码。&lt;/p&gt;
&lt;p&gt;Alpha计算方式: &lt;code&gt;x = value*255/10&lt;/code&gt; -&amp;gt; 再转换为十六进制。&lt;/p&gt;
&lt;h5 id=&quot;应用-1&quot;&gt;&lt;a href=&quot;#应用-1&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h5&gt;&lt;p&gt;RGBA 可应用于 background，border 属性中，在早期版本的 FireFox 中 border 的拐角处的 rgba 会叠加。[测试在 FireFox17 中不再出现叠加的现象]。&lt;/p&gt;
&lt;p&gt;在 IE9 中，已经支持 RGBA 形式，但是同时也支持 filter 形式。因此需要使用 hack 的方式清除 filter 形式。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.selector&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: none\&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;转换函数&quot;&gt;&lt;a href=&quot;#转换函数&quot; class=&quot;headerlink&quot; title=&quot;转换函数&quot;&gt;&lt;/a&gt;转换函数&lt;/h5&gt;&lt;p&gt;这里提供一个 RGBA 值转换为 ARGB 的函数：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param Number 转换为十六进制的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toHex&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;val&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    val = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    val = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.max(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;，val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    val = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.min(val，&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    val = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;0123456789ABCDEF&#39;&lt;/span&gt;.charAt((val - val % &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;0123456789ABCDEF&#39;&lt;/span&gt;.charAt(val % &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param String 字符串形式的 rgba 值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toArgb&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;val&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; valArr = val.split(&lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        red = toHex(valArr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        green = toHex(valArr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        blue = toHex(valArr[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alpha = toHex(valArr[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] * &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;#&#39;&lt;/span&gt;+ alpha + red + green + blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;opacity-属性&quot;&gt;&lt;a href=&quot;#opacity-属性&quot; class=&quot;headerlink&quot; title=&quot;opacity 属性&quot;&gt;&lt;/a&gt;opacity 属性&lt;/h2&gt;&lt;p&gt;CSS 中的 &lt;code&gt;opacity&lt;/code&gt; 属性用于给元素指定一个 0 (全透明) 至1 (不透明) 的透明度值，但是这个值会应用到覆盖在背景之上的元素。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
